GetFilename(fixedVolumeHead ${fixedVolume} NAME_WITHOUT_EXTENSION)
GetFilename(fixedVolumeTail ${fixedVolume} NAME)
GetFilename(OutputDir ${fixedVolume} PATH)

GetFilename(movingVolumeHead ${movingVolume} NAME_WITHOUT_EXTENSION)
GetFilename(movingVolumeTail ${movingVolume} NAME)

# FA map creation
echo()
echo('FA map creation')
echo('\tfixed FA map creation')
If (${outputFixedFAVolume} == '')
  set (fixedFAMap ${OutputDir}/${fixedVolumeHead}_FA.nrrd)
Else()
  set (fixedFAMap ${outputFixedFAVolume})
EndIf()
If (${fixedMaskVolume} != '')
  set (commanddtiprocess ${dtiprocessCmd} --dti_image ${fixedVolume} -f ${fixedFAMap} --mask ${fixedMaskVolume})
Else()
 set (commanddtiprocess ${dtiprocessCmd} --dti_image ${fixedVolume} -f ${fixedFAMap}) 
EndIf ()
Run (outputdtiprocess ${commanddtiprocess} errordtiprocess)
If(${errordtiprocess} != '')
  echo('Error dtiprocess: ' ${errordtiprocess})
  exit()
Endif(${errordtiprocess})

echo('\tmoving FA map creation')
If (${outputMovingFAVolume} == '')
  set (movingFAMap ${OutputDir}/${movingVolumeHead}_FA.nrrd)
Else()
  set (movingFAMap ${outputMovingFAVolume})
EndIf()
If (${movingMaskVolume} != '')
  set (commanddtiprocess ${dtiprocessCmd} --dti_image ${movingVolume} -f ${movingFAMap} --mask ${movingMaskVolume})
Else()
  set (commanddtiprocess ${dtiprocessCmd} --dti_image ${movingVolume} -f ${movingFAMap})
EndIf ()
Run (outputdtiprocess ${commanddtiprocess} errordtiprocess)
If(${errordtiprocess} != '')
  echo('Error dtiprocess: ' ${errordtiprocess})
  exit()
Endif(${errordtiprocess})

# Registration via BRAINSFit (linear of BSpline)
set (Transform '')
If (${IsLinearRegistration} == 1 || ${warpingType} == 'BSpline')
  If (${linearRegType} == 'Rigid')
    set (TransformType 'Rigid')
    set (RegSuffix 'RReg')
  EndIf()
  If (${linearRegType} == 'Affine')
   set (TransformType 'Rigid,Affine')
   set (RegSuffix 'AffReg')
  EndIf()
  If (${warpingType} == 'BSpline')
    If (${linearRegType} == 'Rigid')
      set (TransformType 'Rigid,BSpline')
    EndIf()
    If (${linearRegType} == 'Affine')
      set (TransformType 'Rigid,Affine,BSpline')
    EndIf()
    If (${linearRegType} == 'None')
      set (TransformType 'BSpline')
    EndIf()
    set (RegSuffix 'BSpline')
  EndIf()
echo()
echo(${TransformType} ' registration...')

If (${outputResampledFAVolume} != '')
  set (ResampledFAMap ${outputResampledFAVolume})
Else()
  set (ResampledFAMap ${OutputDir}/${movingVolumeHead}_FA_${RegSuffix}.nrrd)
Endif()
If (${outputTransform} != '')
  set (Transform ${outputTransform})
Else()
  set (Transform ${OutputDir}/${movingVolumeHead}_${RegSuffix}.txt)
Endif()
If (${initialTransform} != '')
  set (commandBRAINSFit ${BRAINSFitCmd} --fixedVolume ${fixedFAMap} --movingVolume ${movingFAMap} --initialTransform ${initialTransform} --outputTransform ${Transform} --outputVolume ${ResampledFAMap} --outputVolumePixelType ushort --transformType ${TransformType} --interpolationMode Linear)
Else()
  set (commandBRAINSFit ${BRAINSFitCmd} --fixedVolume ${fixedFAMap} --movingVolume ${movingFAMap} --initializeTransformMode ${initializeTransformMode} --outputTransform ${Transform} --outputVolume ${ResampledFAMap} --outputVolumePixelType ushort --transformType ${TransformType} --interpolationMode Linear)
Endif()
Run (outputBRAINSFit ${commandBRAINSFit} errorBRAINSFit)
#If(${errorBRAINSFit} != '')
#  echo('Error BRAINSFit: ' ${errorBRAINSFit})
#  exit()
#Endif()
If (${IsDemonsWarping} == 1)
  DeleteFile(${ResampledFAMap})
EndIf()
Endif()

# Warping
If (${IsDemonsWarping} == 1)
  echo()
  echo('Warping...')
  If (${outputResampledFAVolume} != '')
    set (ResampledFAMap ${outputResampledFAVolume})
  Else()
    set (ResampledFAMap ${OutputDir}/${movingVolumeHead}_FA_warp.nrrd)
  EndIf()
  If (${outputDeformationFieldVolume} != '')
    set (DeformationField ${outputDeformationFieldVolume})
  Else()
    set (DeformationField ${OutputDir}/${movingVolumeHead}_warpfield.nrrd)
  EndIf()
  set (commandBRAINSDemonWarp ${BRAINSDemonWarpCmd} --fixedVolume ${fixedFAMap} --movingVolume ${movingFAMap} --outputVolume ${ResampledFAMap} --outputDeformationFieldVolume ${DeformationField} --outputPixelType ushort --interpolationMode Linear --registrationFilterType ${warpingType} --histogramMatch --numberOfHistogramBins ${numberOfHistogramLevels} --numberOfMatchPoints ${numberOfMatchPoints})
  If (${Transform} != '')
    set (commandBRAINSDemonWarp ${BRAINSDemonWarpCmd} --fixedVolume ${fixedFAMap} --movingVolume ${movingFAMap} --outputVolume ${ResampledFAMap} --outputDeformationFieldVolume ${DeformationField} --outputPixelType ushort --interpolationMode Linear --registrationFilterType ${warpingType} --numberOfHistogramBins ${numberOfHistogramLevels} --numberOfMatchPoints ${numberOfMatchPoints} --initializeWithTransform ${Transform})
  EndIf()
  If (${initialDeformationField} != '')
    set (commandBRAINSDemonWarp ${BRAINSDemonWarpCmd} --fixedVolume ${fixedFAMap} --movingVolume ${movingFAMap} --outputVolume ${ResampledFAMap} --outputDeformationFieldVolume ${DeformationField} --outputPixelType ushort --interpolationMode Linear --registrationFilterType ${warpingType} --numberOfHistogramBins ${numberOfHistogramLevels} --numberOfMatchPoints ${numberOfMatchPoints} --initializeWithDeformationField ${initialDeformationField})
  EndIf()
  Run (outputBRAINSDemonWarp ${commandBRAINSDemonWarp} errorBRAINSDemonWarp)
  If(${errorBRAINSDemonWarp} != '')
    echo('Error BRAINSDemonWarp: ' ${errorBRAINSDemonWarp})
    exit()
  Endif()
Endif()

# DTI resampling
echo()
echo('DTI resampling...')
If (${outputVolume} != '')
  set (ResampledDTI ${outputVolume})
Else()
  set (ResampledDTI ${OutputDir}/${movingVolumeHead}_warp.nrrd)
EndIf()
If (${IsDemonsWarping} == 1)
  set (commandResampleDTI ${ResampleDTICmd} ${movingVolume} ${ResampledDTI} --Reference ${fixedVolume} --defField ${DeformationField} --hfieldtype displacement)
Else()
  set (commandResampleDTI ${ResampleDTICmd} ${movingVolume} ${ResampledDTI} --Reference ${fixedVolume} --transformationFile ${Transform})
EndIf()
Run (outputResampleDTI ${commandResampleDTI} errorResampleDTI)
If(${errorResampleDTI} != '')
  echo('Error ResampleDTI: ' ${errorResampleDTI})
  exit()
Endif()

#Delete temporary files
If (${outputVolume} == '')
  DeleteFile(${ResampledDTI})
EndIf()
If (${outputTransform} == '')
  DeleteFile(${Transform})
EndIf()
If (${outputDeformationFieldVolume} == '')
  DeleteFile(${DeformationField})
EndIf()
If (${outputFixedFAVolume} == '')
  DeleteFile(${fixedFAMap})
EndIf()
If (${outputMovingFAVolume} == '')
  DeleteFile(${movingFAMap})
EndIf()
If (${outputResampledFAVolume} == '')
  DeleteFile(${ResampledFAMap})
EndIf